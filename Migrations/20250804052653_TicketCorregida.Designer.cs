// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Terminal.Database;

#nullable disable

namespace Terminal.Migrations
{
    [DbContext(typeof(TerminalDbContext))]
    [Migration("20250804052653_TicketCorregida")]
    partial class TicketCorregida
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Terminal.API.Database.Entities.TicketEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_date");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("TEXT")
                        .HasColumnName("fecha_emision");

                    b.Property<int>("NumeroAsiento")
                        .HasColumnType("INTEGER")
                        .HasColumnName("numero_asiento");

                    b.Property<string>("NumeroTicket")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("numero_ticket");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_date");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_by");

                    b.Property<decimal>("ValorBoleto")
                        .HasColumnType("TEXT")
                        .HasColumnName("valor_boleto");

                    b.HasKey("Id");

                    b.ToTable("tickets");
                });

            modelBuilder.Entity("Terminal.Database.Entities.BusEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<int>("Anio")
                        .HasColumnType("INTEGER")
                        .HasColumnName("anio");

                    b.Property<string>("Chofer")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("chofer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_date");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_by");

                    b.Property<double>("EndLatitude")
                        .HasColumnType("REAL")
                        .HasColumnName("end_latitude");

                    b.Property<double>("EndLongitude")
                        .HasColumnType("REAL")
                        .HasColumnName("end_longitude");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("modelo");

                    b.Property<string>("NumeroBus")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("numero_bus");

                    b.Property<double>("StartLatitude")
                        .HasColumnType("REAL")
                        .HasColumnName("start_latitude");

                    b.Property<double>("StartLongitude")
                        .HasColumnType("REAL")
                        .HasColumnName("start_longitude");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_date");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("bus");
                });

            modelBuilder.Entity("Terminal.Database.Entities.CompanyEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_date");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("phone_number");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_date");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("companies");
                });

            modelBuilder.Entity("Terminal.Database.Entities.HorarioEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_date");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_by");

                    b.Property<TimeSpan>("HoraLlegada")
                        .HasColumnType("TEXT")
                        .HasColumnName("hora_llegada");

                    b.Property<TimeSpan>("HoraSalida")
                        .HasColumnType("TEXT")
                        .HasColumnName("hora_salida");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT")
                        .HasColumnName("precio");

                    b.Property<int>("RutaId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ruta_id");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_date");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("horarios");
                });
#pragma warning restore 612, 618
        }
    }
}
